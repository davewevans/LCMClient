@page "/resetPassword/{userId}"

@using LCMClient.Features.Admin.Models
@using LCMClient.Features.Shared.Repository

@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@inject IMatToaster Toaster
@inject IUserRepository userRepository

@attribute [Authorize(Roles = "Admin")]



<div class="mb-16 m-8">
    <EditForm Model="passwordResetDTO" OnValidSubmit="ResetPasswordHandler">
        <DataAnnotationsValidator />

        <MudCard Class="my-mud-card-form">
            <MudCardHeader Class="my-mud-card-header">
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Reset Password</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Cancel" Color="Color.Default" OnClick="@OnCancel" />
                </CardHeaderActions>
            </MudCardHeader>

            <MudCardContent>

                @if (user != null)
                {
                    <div class="font-semibold text-xl">
                        @user?.FirstName @user?.LastName
                    </div>

                    <div class="font-semibold text-xl mb-6">
                        @user?.Email
                    </div>
                }

                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="passwordResetDTO.NewPassword" Label="New Password" Variant="Variant.Text" />
                        <ValidationMessage For="@(() => passwordResetDTO.NewPassword)" />
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField @bind-Value="passwordResetDTO.ConfirmPassword" Label="Confirm Password" Variant="Variant.Text" />
                        <ValidationMessage For="@(() => passwordResetDTO.ConfirmPassword)" />
                    </MudItem>
                </MudGrid>
            </MudCardContent>

            <MudCardActions>
                <MudButton Variant="Variant.Filled"
                           ButtonType="ButtonType.Submit"
                           Size="Size.Large"
                           Color="Color.Primary"
                           Style="margin-left:auto;margin-right:auto;"
                           Class="mt-6">
                    Reset Password
                </MudButton>
            </MudCardActions>

        </MudCard>
    </EditForm>
</div>

@code {

    [Parameter]
    public string UserId { get; set; }

    private UserModel user { get; set; }

    private PasswordResetModel passwordResetDTO = new PasswordResetModel();

    protected override async Task OnInitializedAsync()
    {
        user = await userRepository.GetUserById(UserId);
    }

    private async Task ResetPasswordHandler()
    {
        var result = await accountsRepository.ResetPassword(UserId, passwordResetDTO);
        if (result)
        {
            ShowSnackbar("Password reset successfully.", MatToastType.Success);
            navigationManager.NavigateTo("/admin");
            return;
        }
        ShowSnackbar("Password reset failed.", MatToastType.Danger);

    }

    private void ShowSnackbar(string message, MatToastType type)
    {
        Toaster.Add(message, type, "", "", config =>
        {
            config.ShowProgressBar = false;
            config.RequireInteraction = false;
        });
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/admin");
    }
}
