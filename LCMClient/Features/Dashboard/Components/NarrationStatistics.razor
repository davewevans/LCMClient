@using LCMClient.Features.Dashboard.Models
@using LCMClient.Features.Dashboard
@using Radzen.Blazor
@using System.Globalization

@inject NavigationManager navigationManager
@inject IDashboardRepository dashboardRepository

@if (isLoading)
{
    <LoadingAnimation />
}
else
{
    <MudPaper Elevation="3" Class="p-3">
        <h1>Narration Statistics</h1>
        <div class="">
            <RadzenChart>
                <RadzenBarSeries Data="@totalData" CategoryProperty="Group" Title="Total" LineType="LineType.Dashed" ValueProperty="Count" />
                <RadzenBarSeries Data="@last6MonthsData" CategoryProperty="Group" Title="Last 6 Months" ValueProperty="Count" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Number of Narrations" />
                </RadzenValueAxis>
                <RadzenBarOptions Radius="5" />
            </RadzenChart>
        </div>
    </MudPaper>
}

@code {

    private bool isLoading = true;

    class DataItem
    {
        public string Group { get; set; }
        public double Count { get; set; }
    }
    DataItem[] totalData;
    DataItem[] last6MonthsData;

    private NarrationStatisticsModel narrationStatistics = new NarrationStatisticsModel();

    protected override async Task OnInitializedAsync()
    {
        narrationStatistics = await dashboardRepository.GetNarrationStatistics();

        if (narrationStatistics != null)
        {
            SetDataItems();
            isLoading = false;
        }
    }

    private void SetDataItems()
    {
        totalData = new DataItem[]
        {
            new DataItem
            {
                Group = "Orphans",
                Count = narrationStatistics.OrphanNarrationCount
            },
            new DataItem
            {
                Group = "Guradians",
                Count = narrationStatistics.GuardianNarrationCount
            },
        };

        last6MonthsData = new DataItem[]
        {
            new DataItem
            {
            Group = "Orphans",
            Count = narrationStatistics.OrphanLast6MoCount
            },
            new DataItem
            {
            Group = "Guradians",
            Count = narrationStatistics.GuardianLast6MoCount
            }
        };
    }
}
