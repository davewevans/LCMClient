@using LCMClient.Features.Shared.Models

<SfGrid @ref="SponsorDataGrid"
        TValue="SponsorModel"
        AllowPaging="true"
        AllowSorting="true"
        AllowFiltering="false"
        Query="@Qry"
        Toolbar="@ToolbarItems"
        AllowSelection="true"

        AllowReordering="true"
        AllowResizing="true"
        AllowTextWrap="true"
        AllowExcelExport="true"
        AllowPdfExport="true">

    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>

    <GridPageSettings PageSize="@pageSize"
                      PageSizes="@PageSizes">
    </GridPageSettings>

    <GridSelectionSettings EnableToggle="true" EnableSimpleMultiRowSelection="false"></GridSelectionSettings>

    <GridEvents TValue="SponsorModel"
                OnLoad="Load"
                OnToolbarClick="ToolbarClick"
                OnRecordClick="RecordClickHandler"
                OnActionBegin="ActionBeginHandler">
    </GridEvents>

    <SfDataManager Url="https://localhost:44352/api/sponsors/sponsorsSFDataGrid"
                   CrossDomain="true"
                   Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>

    <GridEditSettings AllowAdding="false"
                      AllowEditing="false"
                      AllowDeleting="false"
                      Mode="EditMode.Normal"
                      AllowEditOnDblClick="false"
                      ShowDeleteConfirmDialog="false">
    </GridEditSettings>

    <GridColumns>
        <GridColumn Field="@nameof(SponsorModel.SponsorID)" IsPrimaryKey="true" AllowEditing="false" Visible="false" />

        <GridColumn Field="@nameof(SponsorModel.FirstName)"
                    HeaderText="First Name"
                    Width="80"
                    ValidationRules="@(new ValidationRules {Required = true, MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.LastName)"
                    HeaderText="Last Name"
                    Width="80"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.Address)"
                    HeaderText="Address"
                    Width="80"
                    HideAtMedia="(min-width: 480px)"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.City)"
                    HeaderText="City"
                    Width="80"
                    HideAtMedia="(min-width: 480px)"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.State)"
                    HeaderText="State"
                    Width="50"
                    HideAtMedia="(min-width: 480px)"
                    ValidationRules="@(new ValidationRules {MaxLength = 64})" />
        <GridColumn Field="@nameof(SponsorModel.ZipCode)"
                    HeaderText="Zip Code"
                    Width="40"
                    HideAtMedia="(min-width: 480px)"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.Email)"
                    HeaderText="Email"
                    Width="80"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />
        <GridColumn Field="@nameof(SponsorModel.MainPhone)"
                    HeaderText="Phone"
                    Width="80"
                    ValidationRules="@(new ValidationRules {MaxLength = 255})" />

    </GridColumns>
</SfGrid>


@code {

    private SfGrid<SponsorModel> SponsorDataGrid = new SfGrid<SponsorModel>();

    public static string searchTerm = "";
    public Query Qry = new Query();
    private string ProfileBtnContent = "View/Edit";

    public List<SponsorModel> Sponsors { get; set; }

    public List<string> ToolbarItems = new List<string> { "ExcelExport", "PdfExport", "Search" };

    public int[] PageSizes = { 5, 10, 20, 50, 100 };
    private int pageSize = 20;

    public async Task ActionBeginHandler(ActionEventArgs<SponsorModel> args)
    {
        // Add to query string parameters for search and sorting
        if (string.IsNullOrWhiteSpace(args.SearchString)) await SponsorDataGrid.Search("");
        Qry.AddParams("SearchTerm", args.SearchString);

        if (!string.IsNullOrWhiteSpace(args.ColumnName))
            Qry.AddParams("ColumnName", args.ColumnName);

        Qry.AddParams("SortDirection", args.Direction);
    }

    public async Task ToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id.Contains("excelexport"))
        {
            await this.SponsorDataGrid.ExcelExport();
        }

        if (args.Item.Id.Contains("pdfexport"))
        {
            await this.SponsorDataGrid.PdfExport();
        }
    }

    public void RecordClickHandler(RecordClickEventArgs<SponsorModel> args)
    {
        // nav to details view 
    }

    public void Load(object args)
    {

    }
}