// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LCMClient.Features.NarrationsApproval
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using LCMClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using LCMClient.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using LCMClient.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using MudBlazor.Dialog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\_Imports.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Auth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Shared.Repository.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Admin.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
using LCMClient.Features.Shared.Narrations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
           [Authorize(Roles = "Admin, NarrationApprover")]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/NarrationApprovalDetails/{narrationId:int}")]
    public partial class NarrationDetails : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 112 "C:\Users\davew\OneDrive\Documents\GitHub\LCMClient\LCMClient\Features\NarrationsApproval\NarrationDetails.razor"
       

    [Parameter]
    public int narrationId { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    private NarrationModel narrationDetails = new();

    protected override async Task OnInitializedAsync()
    {
        narrationDetails = await narrationRepository.GetNarrationById(narrationId);

        await jsRuntime.ConsoleLog($"submitted by: {narrationDetails.SubmittedByName}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await jsRuntime.FocusInput("comments");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    private async Task ApproveNarrationHandler(int narrationId)
    {
    //await jsRuntime.ConsoleLog($"ApproveNarrationHandler");
    //await jsRuntime.ConsoleLog($"narration id: {narrationId}");

    // get user email to send to API
        var authState = await AuthState;
        var user = authState.User;
        string userEmail = "";
        string emailClaimTypeKey = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress";
        foreach (var claim in authState.User.Claims)
        {
            await jsRuntime.ConsoleLog(claim.Type + " : " + claim.Value);
            if (claim.Type.Equals(emailClaimTypeKey))
            {
                userEmail = claim.Value;
            }
        }

        narrationDetails.ApprovedByEmail = userEmail;


        var result = await narrationRepository.ApproveNarrationAsync(narrationId, narrationDetails);
        if (result)
        {
            ShowSnackbar("Narration has been approved.", MatToastType.Success);
            navigationManager.NavigateTo("/pendingnarrations");
            return;
        }
        ShowSnackbar("Narration approval failed.", MatToastType.Danger);
    }

    private async Task RejectNarrationHandler(int narrationId)
    {
    //await jsRuntime.ConsoleLog($"RejectNarrationHandler");
    //await jsRuntime.ConsoleLog($"narration id: {narrationId}");

    // get user email to send to API
        var authState = await AuthState;
        var user = authState.User;
        string userEmail = "";
        string emailClaimTypeKey = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress";
        foreach (var claim in authState.User.Claims)
        {
            await jsRuntime.ConsoleLog(claim.Type + " : " + claim.Value);
            if (claim.Type.Equals(emailClaimTypeKey))
            {
                userEmail = claim.Value;
            }
        }

        narrationDetails.RejectedByEmail = userEmail;


        var result = await narrationRepository.RejectNarrationAsync(narrationId, narrationDetails);
        if (result)
        {
            ShowSnackbar("Narration has been rejected.", MatToastType.Success);
            navigationManager.NavigateTo("/pendingnarrations");
            return;
        }
        ShowSnackbar("Narration rejected failed.", MatToastType.Danger);
    }

    // private async Task OnRejectNarrationHandler(int narrationId)
    // {
    //     await jsRuntime.ConsoleLog($"OnRejectNarrationHandler");
    //     await jsRuntime.ConsoleLog($"narration id: {narrationId}");
    //     
    //     if (await ShowConfirmDeleteDialog())
    //     {
    //         await narrationRepository.DeleteNarrationAsync(narrationId);
    //         ShowDeleteSuccessSnackbar();
    //         navigationManager.NavigateTo("/pendingnarrations");
    //     }
    // }

    private void ShowSnackbar(string message, MatToastType type)
    {
        Toaster.Add(message, type, "", "", config =>
        {
            config.ShowProgressBar = false;
            config.RequireInteraction = false;
        });
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/pendingnarrations");
    }


    private async Task<bool> ShowConfirmDeleteDialog()
    {
        var Options = new MudBlazor.Dialog.DialogOptions() {CloseButton = true};
        var Parameters = new DialogParameters();
        Parameters.Add("Message", "Are you sure you want to reject this narration?");
        var userSelect = Dialog.Show<ConfirmDeleteDialog>("Confirm Delete", Parameters, Options);
        var result = await userSelect.Result;

        if (result.Cancelled)
        {
            return false;
        }
        return true;
    }

    private void ShowDeleteSuccessSnackbar()
    {
        Toaster.Add("Narration successfully rejected.", MatToastType.Success, "", "", config =>
        {
            config.ShowProgressBar = false;
            config.RequireInteraction = false;
        });
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMatToaster Toaster { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService Dialog { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILoginService loginService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private INarrationRepository narrationRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAccountsRepository accountsRepository { get; set; }
    }
}
#pragma warning restore 1591
